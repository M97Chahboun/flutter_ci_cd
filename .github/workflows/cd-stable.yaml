name: Deploy web & Promote Android to production
on:
  pull_request:
    branches:
    - stable
    types:
      - closed
jobs:
  # build_web:
  #   name: Build Flutter (Web)
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v1
  #   - uses: subosito/flutter-action@v1
  #     with:
  #         channel: 'stable'
  #   - run: flutter pub get
  #   - run: flutter config --enable-web
  #   - run: flutter build web
  #   - name: Archive Production Artifact
  #     uses: actions/upload-artifact@master
  #     with:
  #       name: web-build
  #       path: build/web

  # deploy_web:
  #   name: Deploy Web to Firebase Hosting
  #   needs: build_web
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Repo
  #       uses: actions/checkout@master
  #     - name: Download Artifact
  #       uses: actions/download-artifact@master
  #       with:
  #         name: web-build
  #         path: web-build
  #     - name: Deploy to Firebase
  #       uses: w9jds/firebase-action@master
  #       with:
  #         args: deploy --only hosting --public web-build
  #       env:
  #         GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
  #         PROJECT_ID: default

  setup_dart_and_run_scripts:
    runs-on: ubuntu-latest
    outputs:
      track: ${{ steps.labels_to_track.outputs.track }}
      project_version: ${{ steps.get_project_version.outputs.project_version }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1.3
      - name: Convert labels to track
        id: labels_to_track
        run: "dart workflows_utils/labels_to_track.dart ${{ join(github.event.pull_request.labels.*.name,' ') }}"
      - name: Get Project Version
        id: get_project_version
        run: "dart workflows_utils/get_project_version.dart"


  promote-android:
    if: ${{ (github.event.pull_request.merged == true) }}
    needs: setup_dart_and_run_scripts
    name: Promote Android Release from ${{env.track}} to production
    runs-on: ubuntu-latest
    steps:
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
      - run: flutter doctor -v
      # Checkout Repo code
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.REPO_TOKEN }}
      # Setup Ruby, Bundler, Gemfile
      - name: Setup Fastlane
        uses: ruby/setup-ruby@72d59482210349c1114eca714b6c5df19fbbec34
        with:
          ruby-version: "2.6"
          bundler-cache: true
          working-directory: android

      - name: Configure Keystore
        run: |
          echo "$PLAY_STORE_UPLOAD_KEY" | base64 --decode > app/upload-keystore.jks
          echo "storeFile=upload-keystore.jks" >> key.properties
          echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> key.properties
          echo "storePassword=$KEYSTORE_STORE_PASSWORD" >> key.properties
          echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> key.properties
        env:
          PLAY_STORE_UPLOAD_KEY: ${{ secrets.PLAY_STORE_UPLOAD_KEY }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
          KEYSTORE_STORE_PASSWORD: ${{ secrets.KEYSTORE_STORE_PASSWORD }}
        working-directory: android

      - run: bundle exec fastlane android promote from:${{env.track}} to:production
        working-directory: android
        env:
            PLAY_STORE_CONFIG_JSON: ${{ secrets.PLAY_STORE_CONFIG_JSON }}

  create_release:
    if: ${{ (github.event.pull_request.merged == true) }}
    needs: setup_dart_and_run_scripts
    name: "Create Release"
    runs-on: "ubuntu-latest"
    steps:
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.REPO_TOKEN }}"
          automatic_release_tag: "${{env.project_version}}"
          prerelease: false